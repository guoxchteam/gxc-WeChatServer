<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<util:properties id="apolloConfigProperties"
		location="
    classpath:/META-INF/properties/*.properties,
    classpath:/META-INF/properties/*.xml,
    /WEB-INF/properties/*.properties,
    /WEB-INF/properties/*.xml" />

	<context:property-placeholder
		properties-ref="apolloConfigProperties" />

	<!-- 配置自动扫描的包 -->
	<context:component-scan base-package="com.ncs.web.wx">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<!-- 配置数据源连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		<!-- 配置其他属性 -->
		<property name="initialPoolSize" value="${jdbc.initPoolSize}" />
		<!-- 最大空闲时间 -->
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<!-- 最少几个连接 -->
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<!-- 每次最多可以执行多少个批处理语句 -->
		<property name="maxStatements" value="${jdbc.maxStatements}" />
		<!-- 如果池中数据连接不够时一次增长多少个 -->
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}" />
		<property name="maxStatementsPerConnection" value="${jdbc.maxStatementsPerConnection}" />
	</bean>
	<!-- 配置JPA部分 -->
	<!-- 配置JPA的EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
		</property>
		<property name="packagesToScan" value="com.ncs.web.wx.jpa"></property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
			</props>
		</property>
		<!--使用二級緩存 -->
		<property name="sharedCacheMode" value="ENABLE_SELECTIVE"></property>
	</bean>
	<!-- 配置事务 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	<!-- 配置支持基于注解的事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 配置SpringData部分 -->
	<jpa:repositories base-package="com.ncs.web.wx.jpa"
		entity-manager-factory-ref="entityManagerFactory"></jpa:repositories>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
</beans>